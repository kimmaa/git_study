git 처음 로그인 할때 
이름 설정
git config --global user.name "Your Name"
엔터
이메일등 연락처 설정
git config --global user.email "you@example.com"
엔터 

----
지금까지 커밋한 버전 보는 방법
git log 
엔터
-- 나올때는 q 버튼 
---
git 수정된것 있는지 보는것: GUI의 변경내용 스테이징과 같은 것
git status

--
수정된 파일을 커밋 대기 상태에 넣는것 
git add 파일.확장자 
엔터
- stage area에 담는것

---
실제로 파일을 커밋하는 것
git commit -m "변경내용"
엔터

-----
commit 연습하기 좋은 날씨네
GUI로 변경해보기
commit 전에는 무조건 변경사항 확인하기!! 제일 중요
작업이 끝나고 차이점 비교가 제일 중요한 현업 자세

--
터미널에서 파일 첫글자 누르고 tap하면 바로 파일 나옴

--
여러개 만들어 놓고 깜빡했을때 
add 로 묶어줄 수 있어 

--
git log 의 gui 버전은 git graph
마스터는 마지막으로 만들어진 버전이다 
master = main 

---
GitHub 원격 저장소로 버전들 올리기
지역저장소를 원격저장소에 등록하는 방법
원격 저장소와 통신하는 방식은 두가지 http와 ssh

git remote add origin https://github.com/kimmaa/dataitgirls6_git.git

https 실패시 SSH로 할수 있다. 
실패했던 http origin을 지워준다.
git remote remove origin 
엔터
git remote add origin git@github.com:kimmaa/dataitgirls6_git.git
엔터
ssh-keygen 
엔터
패스워드 넣으라고 하는디
엔터
그러면 public key has been saved in 경로 나오는데 
경로 복사
- cat 경로붙여넣기 (이건 맥)
엔터
그러면 정교하게 그 패스워드를 모두 복사해
- code 경로붙여넣기 (이건 윈도우)
엔터 
그러면 창이 켜지고 전교하게 그 패스워드를 모두 복사해

github의 프로필 이미지를 클릭 settings 
ssh and gpg keys 들어가
ssh keys의 key란에 그 패스워드를 붙여넣어
title에는 내가 식별가능하게 컴터의 이름을 넣어


------
git push하기
git push -u origin master

--
git remote -v 
내 git 의 경로 보여준다

--
푸쉬 하고 git log를 보면
HEAD -> master, origin/master
나오면 이것은 원격저장소에 마지막 버전으로 올린것이다
동기화 안되고 로컬로 된건 HEAD -> master 만나옴

--
실수로 같은 이름으로 커밋을 로컬과 웹에서 했을때 강제로 밀어 올리기
git push -force
그럼 나머지가 다 날라가므로 협업할때 쓰지마라

---
stream lit 올리는 방법
우선 streamlit 설치 올릴 main.py를 깃헙 저장소에 커밋과 푸쉬한다. 
import streamlit as s
st.write()
써줘야할지도
실행은 python -m streamlit run main.py


